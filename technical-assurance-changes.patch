From 436e1930a38351dc889e273bd4f1ac4c797c339e Mon Sep 17 00:00:00 2001
From: Phil Segal <phil@phisec.co.uk>
Date: Thu, 23 Jan 2025 13:47:53 +0000
Subject: [PATCH 1/5] 496514: Use forward-proxy

---
 README.md                                     |  20 +++
 package-lock.json                             | 161 +++++++++++++-----
 package.json                                  |   2 +-
 src/config/config.js                          |   7 -
 src/server/common/helpers/proxy.js            |  72 --------
 src/server/common/helpers/proxy.test.js       | 140 ---------------
 .../common/helpers/proxy/setup-proxy.js       |  25 +++
 .../common/helpers/proxy/setup-proxy.test.js  |  28 +++
 src/server/index.js                           |   2 +
 9 files changed, 199 insertions(+), 258 deletions(-)
 delete mode 100644 src/server/common/helpers/proxy.js
 delete mode 100644 src/server/common/helpers/proxy.test.js
 create mode 100644 src/server/common/helpers/proxy/setup-proxy.js
 create mode 100644 src/server/common/helpers/proxy/setup-proxy.test.js

diff --git a/README.md b/README.md
index 7a8e218..1e51e51 100644
--- a/README.md
+++ b/README.md
@@ -60,6 +60,26 @@ matches the service name. e.g. `my-service` will have access to everything in Re
 If your service does not require a session cache to be shared between instances or if you don't require Redis, you can
 disable setting `SESSION_CACHE_ENGINE=false` or changing the default value in `~/src/config/index.js`.
 
+## Proxy
+
+We are using forward-proxy which is set up by default. To make use of this: `import { fetch } from 'undici'` then because of the `setGlobalDispatcher(new ProxyAgent(proxyUrl))` calls will use the ProxyAgent Dispatcher
+
+If you are not using Wreck, Axios or Undici or a similar http that uses `Request`. Then you may have to provide the proxy dispatcher:
+
+To add the dispatcher to your own client:
+
+```javascript
+import { ProxyAgent } from 'undici'
+
+return await fetch(url, {
+  dispatcher: new ProxyAgent({
+    uri: proxyUrl,
+    keepAliveTimeout: 10,
+    keepAliveMaxTimeout: 10
+  })
+})
+```
+
 ## Local Development
 
 ### Setup
diff --git a/package-lock.json b/package-lock.json
index f2c29c1..6f68f55 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -25,10 +25,10 @@
         "cssnano": "^7.0.6",
         "cssnano-preset-default": "^7.0.6",
         "date-fns": "^4.1.0",
+        "global-agent": "^3.0.0",
         "govuk-frontend": "^5.7.1",
         "hapi-pino": "^12.1.0",
         "hapi-pulse": "^3.0.1",
-        "https-proxy-agent": "^7.0.5",
         "ioredis": "^5.4.1",
         "lodash": "^4.17.21",
         "node-fetch": "^3.3.2",
@@ -4448,18 +4448,6 @@
         "node": ">=0.4.0"
       }
     },
-    "node_modules/agent-base": {
-      "version": "7.1.1",
-      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.1.tgz",
-      "integrity": "sha512-H0TSyFNDMomMNJQBn8wFV5YC/2eJ+VXECwOadZJT554xP6cODZHPX3H9QMQECxvrgiSOP1pHjy1sMWQVYJOUOA==",
-      "license": "MIT",
-      "dependencies": {
-        "debug": "^4.3.4"
-      },
-      "engines": {
-        "node": ">= 14"
-      }
-    },
     "node_modules/ajv": {
       "version": "6.12.6",
       "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
@@ -5117,6 +5105,13 @@
       "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==",
       "license": "ISC"
     },
+    "node_modules/boolean": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/boolean/-/boolean-3.2.0.tgz",
+      "integrity": "sha512-d0II/GO9uf9lfUHH2BQsjxzRJZBdsjgsBiW4BvhWk/3qoKwQFjIDVN19PfX8F2D/r9PCMTtLWjYVCFrpeYUzsw==",
+      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
+      "license": "MIT"
+    },
     "node_modules/brace-expansion": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
@@ -6266,7 +6261,6 @@
       "version": "1.1.4",
       "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
       "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-define-property": "^1.0.0",
@@ -6284,7 +6278,6 @@
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
       "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "define-data-property": "^1.0.1",
@@ -6386,6 +6379,12 @@
         "node": ">=8"
       }
     },
+    "node_modules/detect-node": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.1.0.tgz",
+      "integrity": "sha512-T0NIuQpnTvFDATNuHN5roPwSBG83rFsuO+MXXH9/3N1eFbn4wcPjttvjMLEPWJ0RGUYgQE7cGgS3tNxbqCGM7g==",
+      "license": "MIT"
+    },
     "node_modules/diff-sequences": {
       "version": "29.6.3",
       "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz",
@@ -6664,7 +6663,6 @@
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
       "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "get-intrinsic": "^1.2.4"
@@ -6677,7 +6675,6 @@
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
       "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -6746,6 +6743,12 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/es6-error": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/es6-error/-/es6-error-4.1.1.tgz",
+      "integrity": "sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==",
+      "license": "MIT"
+    },
     "node_modules/esbuild": {
       "version": "0.23.1",
       "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.23.1.tgz",
@@ -6799,7 +6802,6 @@
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
       "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=10"
@@ -8091,7 +8093,6 @@
       "version": "1.2.4",
       "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
       "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-errors": "^1.3.0",
@@ -8227,6 +8228,35 @@
         "node": "*"
       }
     },
+    "node_modules/global-agent": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/global-agent/-/global-agent-3.0.0.tgz",
+      "integrity": "sha512-PT6XReJ+D07JvGoxQMkT6qji/jVNfX/h364XHZOWeRzy64sSFr+xJ5OX7LI3b4MPQzdL4H8Y8M0xzPpsVMwA8Q==",
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "boolean": "^3.0.1",
+        "es6-error": "^4.1.1",
+        "matcher": "^3.0.0",
+        "roarr": "^2.15.3",
+        "semver": "^7.3.2",
+        "serialize-error": "^7.0.1"
+      },
+      "engines": {
+        "node": ">=10.0"
+      }
+    },
+    "node_modules/global-agent/node_modules/semver": {
+      "version": "7.6.3",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.3.tgz",
+      "integrity": "sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==",
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
     "node_modules/global-modules": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-2.0.0.tgz",
@@ -8282,7 +8312,6 @@
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
       "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "define-properties": "^1.2.1",
@@ -8337,7 +8366,6 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
       "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "get-intrinsic": "^1.1.3"
@@ -8507,7 +8535,6 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
       "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "es-define-property": "^1.0.0"
@@ -8520,7 +8547,6 @@
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
       "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -8533,7 +8559,6 @@
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
       "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -8677,19 +8702,6 @@
         "node": ">= 6.0.0"
       }
     },
-    "node_modules/https-proxy-agent": {
-      "version": "7.0.5",
-      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.5.tgz",
-      "integrity": "sha512-1e4Wqeblerz+tMKPIq2EMGiiWW1dIjZOksyHWSUm1rmuvw/how9hBHZ38lAGj5ID4Ik6EdkOw7NmWPy6LAwalw==",
-      "license": "MIT",
-      "dependencies": {
-        "agent-base": "^7.0.2",
-        "debug": "4"
-      },
-      "engines": {
-        "node": ">= 14"
-      }
-    },
     "node_modules/human-signals": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz",
@@ -10367,6 +10379,12 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/json-stringify-safe": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
+      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==",
+      "license": "ISC"
+    },
     "node_modules/json5": {
       "version": "2.2.3",
       "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
@@ -10657,6 +10675,18 @@
         "tmpl": "1.0.5"
       }
     },
+    "node_modules/matcher": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/matcher/-/matcher-3.0.0.tgz",
+      "integrity": "sha512-OkeDaAZ/bQCxeFAozM55PKcKU0yJMPGifLwV4Qgjitu+5MoAfSQN4lsLJeXZ1b8w0x+/Emda6MZgXS1jvsapng==",
+      "license": "MIT",
+      "dependencies": {
+        "escape-string-regexp": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
     "node_modules/mathml-tag-names": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/mathml-tag-names/-/mathml-tag-names-2.1.3.tgz",
@@ -11325,7 +11355,6 @@
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
       "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -13154,6 +13183,29 @@
         "rimraf": "bin.js"
       }
     },
+    "node_modules/roarr": {
+      "version": "2.15.4",
+      "resolved": "https://registry.npmjs.org/roarr/-/roarr-2.15.4.tgz",
+      "integrity": "sha512-CHhPh+UNHD2GTXNYhPWLnU8ONHdI+5DI+4EYIAOaiD63rHeYlZvyh8P+in5999TTSFgUYuKUAjzRI4mdh/p+2A==",
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "boolean": "^3.0.1",
+        "detect-node": "^2.0.4",
+        "globalthis": "^1.0.1",
+        "json-stringify-safe": "^5.0.1",
+        "semver-compare": "^1.0.0",
+        "sprintf-js": "^1.1.2"
+      },
+      "engines": {
+        "node": ">=8.0"
+      }
+    },
+    "node_modules/roarr/node_modules/sprintf-js": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz",
+      "integrity": "sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==",
+      "license": "BSD-3-Clause"
+    },
     "node_modules/run-parallel": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
@@ -13788,6 +13840,39 @@
         "semver": "bin/semver.js"
       }
     },
+    "node_modules/semver-compare": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/semver-compare/-/semver-compare-1.0.0.tgz",
+      "integrity": "sha512-YM3/ITh2MJ5MtzaM429anh+x2jiLVjqILF4m4oyQB18W7Ggea7BfqdH/wGMK7dDiMghv/6WG7znWMwUDzJiXow==",
+      "license": "MIT"
+    },
+    "node_modules/serialize-error": {
+      "version": "7.0.1",
+      "resolved": "https://registry.npmjs.org/serialize-error/-/serialize-error-7.0.1.tgz",
+      "integrity": "sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==",
+      "license": "MIT",
+      "dependencies": {
+        "type-fest": "^0.13.1"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/serialize-error/node_modules/type-fest": {
+      "version": "0.13.1",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz",
+      "integrity": "sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==",
+      "license": "(MIT OR CC0-1.0)",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/serialize-javascript": {
       "version": "6.0.2",
       "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.2.tgz",
diff --git a/package.json b/package.json
index 556c480..a7a6915 100644
--- a/package.json
+++ b/package.json
@@ -51,10 +51,10 @@
     "cssnano": "^7.0.6",
     "cssnano-preset-default": "^7.0.6",
     "date-fns": "^4.1.0",
+    "global-agent": "^3.0.0",
     "govuk-frontend": "^5.7.1",
     "hapi-pino": "^12.1.0",
     "hapi-pulse": "^3.0.1",
-    "https-proxy-agent": "^7.0.5",
     "ioredis": "^5.4.1",
     "lodash": "^4.17.21",
     "node-fetch": "^3.3.2",
diff --git a/src/config/config.js b/src/config/config.js
index 635ae3e..26f86cf 100644
--- a/src/config/config.js
+++ b/src/config/config.js
@@ -102,13 +102,6 @@ export const config = convict({
     default: null,
     env: 'CDP_HTTP_PROXY'
   }),
-  httpsProxy: /** @type {SchemaObj<string | null>} */ ({
-    doc: 'HTTPS Proxy',
-    format: String,
-    nullable: true,
-    default: null,
-    env: 'CDP_HTTPS_PROXY'
-  }),
   isSecureContextEnabled: {
     doc: 'Enable Secure Context',
     format: Boolean,
diff --git a/src/server/common/helpers/proxy.js b/src/server/common/helpers/proxy.js
deleted file mode 100644
index 2264f40..0000000
--- a/src/server/common/helpers/proxy.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import { URL } from 'node:url'
-import { ProxyAgent } from 'undici'
-import { HttpsProxyAgent } from 'https-proxy-agent'
-
-import { config } from '~/src/config/config.js'
-import { createLogger } from '~/src/server/common/helpers/logging/logger.js'
-
-const logger = createLogger()
-/**
- * @typedef Proxy
- * @property {URL} url
- * @property {number} port
- * @property {ProxyAgent} proxyAgent
- * @property {HttpsProxyAgent<string>} httpAndHttpsProxyAgent
- */
-
-/**
- * Provide ProxyAgent and HttpsProxyAgent when http/s proxy url config has been set
- * @returns {Proxy|null}
- */
-function provideProxy() {
-  const proxyUrl = config.get('httpsProxy') ?? config.get('httpProxy')
-
-  if (!proxyUrl) {
-    return null
-  }
-
-  const url = new URL(proxyUrl)
-  const httpPort = 80
-  const httpsPort = 443
-  // The url.protocol value always has a colon at the end
-  const port = url.protocol.toLowerCase() === 'http:' ? httpPort : httpsPort
-
-  logger.debug(`Proxy set up using ${url.origin}:${port}`)
-
-  return {
-    url,
-    port,
-    proxyAgent: new ProxyAgent({
-      uri: proxyUrl,
-      keepAliveTimeout: 10,
-      keepAliveMaxTimeout: 10
-    }),
-    httpAndHttpsProxyAgent: new HttpsProxyAgent(url)
-  }
-}
-
-/**
- * Provide fetch with dispatcher ProxyAgent when http/s proxy url config has been set
- * @param {string | URL } url
- * @param {RequestInit} options
- * @returns {Promise}
- */
-function proxyFetch(url, options) {
-  const proxy = provideProxy()
-
-  if (!proxy) {
-    return fetch(url, options)
-  }
-
-  logger.debug(
-    `Fetching: ${url.toString()} via the proxy: ${proxy?.url.origin}:${proxy.port}`
-  )
-
-  return fetch(url, {
-    ...options,
-    // @ts-expect-error dispatcher has not been added to types
-    dispatcher: proxy.proxyAgent
-  })
-}
-
-export { proxyFetch, provideProxy }
diff --git a/src/server/common/helpers/proxy.test.js b/src/server/common/helpers/proxy.test.js
deleted file mode 100644
index 71472d6..0000000
--- a/src/server/common/helpers/proxy.test.js
+++ /dev/null
@@ -1,140 +0,0 @@
-import fetchMock from 'jest-fetch-mock'
-import { ProxyAgent } from 'undici'
-
-import { config } from '~/src/config/config.js'
-import { provideProxy, proxyFetch } from '~/src/server/common/helpers/proxy.js'
-
-const mockLoggerDebug = jest.fn()
-jest.mock('~/src/server/common/helpers/logging/logger.js', () => ({
-  createLogger: () => ({ debug: (...args) => mockLoggerDebug(...args) })
-}))
-
-const fetchSpy = jest.spyOn(global, 'fetch')
-const httpProxyUrl = 'http://proxy.example.com'
-const httpsProxyUrl = 'https://proxy.example.com'
-const httpPort = 80
-const httpsPort = 443
-
-describe('#proxy', () => {
-  beforeEach(() => {
-    fetchMock.enableMocks()
-  })
-
-  afterEach(() => {
-    fetchMock.disableMocks()
-    config.set('httpProxy', null)
-    config.set('httpsProxy', null)
-  })
-
-  describe('#provideProxy', () => {
-    describe('When a Proxy URL has not been set', () => {
-      test('Should return null', () => {
-        expect(provideProxy()).toBeNull()
-      })
-    })
-
-    describe('When a HTTP Proxy URL has been set', () => {
-      let result
-
-      beforeEach(() => {
-        config.set('httpProxy', httpProxyUrl)
-        result = provideProxy()
-      })
-
-      test('Should make expected set up message', () => {
-        expect(mockLoggerDebug).toHaveBeenCalledWith(
-          `Proxy set up using ${httpProxyUrl}:${httpPort}`
-        )
-      })
-
-      test('Should set the correct port for HTTP', () => {
-        expect(result).toHaveProperty('port', httpPort)
-      })
-
-      test('Should return expected HTTP Proxy object', () => {
-        expect(result).toHaveProperty('url')
-        expect(result).toHaveProperty('proxyAgent')
-        expect(result).toHaveProperty('httpAndHttpsProxyAgent')
-      })
-    })
-
-    describe('When a HTTPS Proxy URL has been set', () => {
-      let result
-
-      beforeEach(() => {
-        config.set('httpsProxy', httpsProxyUrl)
-        result = provideProxy()
-      })
-
-      test('Should call debug with expected message', () => {
-        expect(mockLoggerDebug).toHaveBeenCalledWith(
-          `Proxy set up using ${httpsProxyUrl}:${httpsPort}`
-        )
-      })
-
-      test('Should set the correct port for HTTPS', () => {
-        expect(result).toHaveProperty('port', httpsPort)
-      })
-
-      test('Should return expected HTTPS Proxy object', () => {
-        expect(result).toHaveProperty('url')
-        expect(result).toHaveProperty('proxyAgent')
-        expect(result).toHaveProperty('httpAndHttpsProxyAgent')
-      })
-    })
-  })
-
-  describe('#proxyFetch', () => {
-    const secureUrl = 'https://beepboopbeep.com'
-
-    test('Should pass options through', async () => {
-      fetch.mockResponse(() => Promise.resolve({}))
-
-      await proxyFetch(secureUrl, { method: 'GET' })
-
-      expect(fetchSpy).toHaveBeenCalledWith(secureUrl, { method: 'GET' })
-    })
-
-    describe('When no Proxy is configured', () => {
-      test('Should fetch without Proxy Agent', async () => {
-        fetch.mockResponse(() => Promise.resolve({}))
-
-        await proxyFetch(secureUrl, {})
-
-        expect(fetchSpy).toHaveBeenCalledWith(secureUrl, {})
-      })
-    })
-
-    describe('When proxy is configured', () => {
-      beforeEach(async () => {
-        config.set('httpProxy', httpsProxyUrl)
-        fetch.mockResponse(() => Promise.resolve({}))
-
-        await proxyFetch(secureUrl, {})
-      })
-
-      test('Should fetch with Proxy Agent', () => {
-        expect(fetchSpy).toHaveBeenCalledWith(
-          secureUrl,
-          expect.objectContaining({
-            dispatcher: expect.any(ProxyAgent)
-          })
-        )
-      })
-
-      test('Should make expected set up message', () => {
-        expect(mockLoggerDebug).toHaveBeenNthCalledWith(
-          1,
-          `Proxy set up using ${httpsProxyUrl}:${httpsPort}`
-        )
-      })
-
-      test('Should make expected fetching via the proxy message', () => {
-        expect(mockLoggerDebug).toHaveBeenNthCalledWith(
-          2,
-          `Fetching: ${secureUrl.toString()} via the proxy: ${httpsProxyUrl}:${httpsPort}`
-        )
-      })
-    })
-  })
-})
diff --git a/src/server/common/helpers/proxy/setup-proxy.js b/src/server/common/helpers/proxy/setup-proxy.js
new file mode 100644
index 0000000..518631b
--- /dev/null
+++ b/src/server/common/helpers/proxy/setup-proxy.js
@@ -0,0 +1,25 @@
+import { ProxyAgent, setGlobalDispatcher } from 'undici'
+import { bootstrap } from 'global-agent'
+import { createLogger } from '~/src/server/common/helpers/logging/logger.js'
+import { config } from '~/src/config/config.js'
+const logger = createLogger()
+
+/**
+ * If HTTP_PROXY is set setupProxy() will enable it globally
+ * for a number of http clients.
+ * Node Fetch will still need to pass a ProxyAgent in on each call.
+ */
+export function setupProxy() {
+  const proxyUrl = config.get('httpProxy')
+
+  if (proxyUrl) {
+    logger.info('setting up global proxies')
+
+    // Undici proxy
+    setGlobalDispatcher(new ProxyAgent(proxyUrl))
+
+    // global-agent (axios/request/and others)
+    bootstrap()
+    global.GLOBAL_AGENT.HTTP_PROXY = proxyUrl
+  }
+}
diff --git a/src/server/common/helpers/proxy/setup-proxy.test.js b/src/server/common/helpers/proxy/setup-proxy.test.js
new file mode 100644
index 0000000..124f7b7
--- /dev/null
+++ b/src/server/common/helpers/proxy/setup-proxy.test.js
@@ -0,0 +1,28 @@
+import { config } from '~/src/config/config.js'
+import { setupProxy } from '~/src/server/common/helpers/proxy/setup-proxy.js'
+import { getGlobalDispatcher, ProxyAgent } from 'undici'
+
+describe('setupProxy', () => {
+  afterEach(() => {
+    config.set('httpProxy', null)
+  })
+
+  test('Should not setup proxy if the environment variable is not set', () => {
+    config.set('httpProxy', null)
+    setupProxy()
+
+    expect(global?.GLOBAL_AGENT?.HTTP_PROXY).toBeUndefined()
+
+    const undiciDispatcher = getGlobalDispatcher()
+
+    expect(undiciDispatcher).not.toBeInstanceOf(ProxyAgent)
+  })
+
+  test('Should setup proxy if the environment variable is set', () => {
+    config.set('httpProxy', 'http://localhost:8080')
+    setupProxy()
+    expect(global?.GLOBAL_AGENT?.HTTP_PROXY).toBe('http://localhost:8080')
+    const undiciDispatcher = getGlobalDispatcher()
+    expect(undiciDispatcher).toBeInstanceOf(ProxyAgent)
+  })
+})
diff --git a/src/server/index.js b/src/server/index.js
index 942e356..59166c5 100644
--- a/src/server/index.js
+++ b/src/server/index.js
@@ -11,8 +11,10 @@ import { sessionCache } from '~/src/server/common/helpers/session-cache/session-
 import { getCacheEngine } from '~/src/server/common/helpers/session-cache/cache-engine.js'
 import { pulse } from '~/src/server/common/helpers/pulse.js'
 import { requestTracing } from '~/src/server/common/helpers/request-tracing.js'
+import { setupProxy } from '~/src/server/common/helpers/proxy/setup-proxy.js'
 
 export async function createServer() {
+  setupProxy()
   const server = hapi.server({
     port: config.get('port'),
     routes: {
-- 
2.39.3 (Apple Git-146)


From 7ec77411e0401a8d221273089c60f7dea7979c18 Mon Sep 17 00:00:00 2001
From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
Date: Wed, 29 Jan 2025 11:58:28 +0000
Subject: [PATCH 2/5] Bump undici from 6.20.1 to 6.21.1

Bumps [undici](https://github.com/nodejs/undici) from 6.20.1 to 6.21.1.
- [Release notes](https://github.com/nodejs/undici/releases)
- [Commits](https://github.com/nodejs/undici/compare/v6.20.1...v6.21.1)

---
updated-dependencies:
- dependency-name: undici
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>
---
 package-lock.json | 8 ++++----
 package.json      | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index 6f68f55..f3fa696 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -35,7 +35,7 @@
         "nunjucks": "^3.2.4",
         "pino": "^9.5.0",
         "pino-pretty": "^13.0.0",
-        "undici": "^6.20.1"
+        "undici": "^6.21.1"
       },
       "devDependencies": {
         "@babel/cli": "^7.25.9",
@@ -15299,9 +15299,9 @@
       "license": "MIT"
     },
     "node_modules/undici": {
-      "version": "6.20.1",
-      "resolved": "https://registry.npmjs.org/undici/-/undici-6.20.1.tgz",
-      "integrity": "sha512-AjQF1QsmqfJys+LXfGTNum+qw4S88CojRInG/6t31W/1fk6G59s92bnAvGz5Cmur+kQv2SURXEvvudLmbrE8QA==",
+      "version": "6.21.1",
+      "resolved": "https://registry.npmjs.org/undici/-/undici-6.21.1.tgz",
+      "integrity": "sha512-q/1rj5D0/zayJB2FraXdaWxbhWiNKDvu8naDT2dl1yTlvJp4BLtOcp2a5BvgGNQpYYJzau7tf1WgKv3b+7mqpQ==",
       "license": "MIT",
       "engines": {
         "node": ">=18.17"
diff --git a/package.json b/package.json
index a7a6915..df9cd21 100644
--- a/package.json
+++ b/package.json
@@ -61,7 +61,7 @@
     "nunjucks": "^3.2.4",
     "pino": "^9.5.0",
     "pino-pretty": "^13.0.0",
-    "undici": "^6.20.1"
+    "undici": "^6.21.1"
   },
   "devDependencies": {
     "@babel/cli": "^7.25.9",
-- 
2.39.3 (Apple Git-146)


From 2bcf288b03d41e060cd32760e19a07f5f38b867d Mon Sep 17 00:00:00 2001
From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
Date: Wed, 29 Jan 2025 12:32:06 +0000
Subject: [PATCH 3/5] Bump cross-spawn from 6.0.5 to 6.0.6

Bumps [cross-spawn](https://github.com/moxystudio/node-cross-spawn) from 6.0.5 to 6.0.6.
- [Changelog](https://github.com/moxystudio/node-cross-spawn/blob/v6.0.6/CHANGELOG.md)
- [Commits](https://github.com/moxystudio/node-cross-spawn/compare/v6.0.5...v6.0.6)

---
updated-dependencies:
- dependency-name: cross-spawn
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
---
 package-lock.json | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index f3fa696..6cc5ce3 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -5868,9 +5868,9 @@
       }
     },
     "node_modules/cross-spawn": {
-      "version": "7.0.5",
-      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.5.tgz",
-      "integrity": "sha512-ZVJrKKYunU38/76t0RMOulHOnUcbU9GbpWKAOZ0mhjr7CX6FVrH+4FrAapSOekrgFQ3f/8gwMEuIft0aKq6Hug==",
+      "version": "7.0.6",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
+      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -11144,9 +11144,9 @@
       "license": "MIT"
     },
     "node_modules/npm-run-all/node_modules/cross-spawn": {
-      "version": "6.0.5",
-      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
-      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
+      "version": "6.0.6",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.6.tgz",
+      "integrity": "sha512-VqCUuhcd1iB+dsv8gxPttb5iZh/D0iubSP21g36KXdEuf6I5JiioesUVjpCdHV9MZRUfVFlvwtIUyPfxo5trtw==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-- 
2.39.3 (Apple Git-146)


From 50403ea13c024d5def3d379632d74c4ae2f32302 Mon Sep 17 00:00:00 2001
From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
Date: Wed, 29 Jan 2025 12:35:47 +0000
Subject: [PATCH 4/5] Bump nanoid from 3.3.7 to 3.3.8

Bumps [nanoid](https://github.com/ai/nanoid) from 3.3.7 to 3.3.8.
- [Release notes](https://github.com/ai/nanoid/releases)
- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)
- [Commits](https://github.com/ai/nanoid/compare/3.3.7...3.3.8)

---
updated-dependencies:
- dependency-name: nanoid
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
---
 package-lock.json | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index 6cc5ce3..eea23d9 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -10841,9 +10841,9 @@
       "license": "MIT"
     },
     "node_modules/nanoid": {
-      "version": "3.3.7",
-      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
-      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
+      "version": "3.3.8",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz",
+      "integrity": "sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==",
       "funding": [
         {
           "type": "github",
-- 
2.39.3 (Apple Git-146)


From 05f6553af94bd48b2733ac887b115f02f52c512d Mon Sep 17 00:00:00 2001
From: calum-gunn1 <calum.douglas.gunn@gmail.com>
Date: Mon, 3 Feb 2025 10:26:46 +0000
Subject: [PATCH 5/5] added changes

---
 .github/template/template-compose.yml         |  8 +-
 .github/workflows/publish-hotfix.yml          |  3 +-
 .github/workflows/publish.yml                 |  3 +-
 compose.yml                                   |  3 +-
 src/client/stylesheets/_govuk-frontend.scss   |  4 +-
 src/client/stylesheets/application.scss       | 12 +--
 src/client/stylesheets/components/_index.scss |  2 +-
 src/client/stylesheets/core/_header.scss      |  2 +-
 src/client/stylesheets/core/_index.scss       |  4 +-
 src/client/stylesheets/core/_main.scss        |  2 +-
 src/client/stylesheets/helpers/_index.scss    |  2 +-
 src/client/stylesheets/partials/_index.scss   |  2 +-
 src/client/stylesheets/variables/_index.scss  |  2 +-
 src/config/config.js                          |  2 +-
 src/config/nunjucks/context/context.test.js   |  4 +-
 src/server/about/index.njk                    | 26 ++++--
 .../common/components/heading/_heading.scss   |  2 +-
 src/server/common/helpers/errors.test.js      |  2 +-
 .../partials/navigation/_navigation.scss      | 20 ++---
 src/server/home/controller.js                 | 20 ++++-
 src/server/home/controller.test.js            |  4 +-
 src/server/home/index.njk                     | 81 ++++++++-----------
 22 files changed, 112 insertions(+), 98 deletions(-)

diff --git a/.github/template/template-compose.yml b/.github/template/template-compose.yml
index d9b92f2..1191f65 100644
--- a/.github/template/template-compose.yml
+++ b/.github/template/template-compose.yml
@@ -6,9 +6,7 @@ services:
     volumes:
       - ./tests/tls:/tls
       - ./redis.conf:/etc/redis.conf
-    command: [
-      "/etc/redis.conf"
-    ]
+    command: ['/etc/redis.conf']
   service:
     build:
       context: ../..
@@ -16,12 +14,12 @@ services:
     networks:
       - cdp-network
     ports:
-      - "8085:8085"
+      - '8085:8085'
     depends_on:
       - redis
     environment:
       PORT: 8085
-      TRUSTSTORE_REDIS: "${REDIS_TEST_CA}"
+      TRUSTSTORE_REDIS: '${REDIS_TEST_CA}'
       REDIS_HOST: redis
       REDIS_USERNAME: username
       REDIS_PASSWORD: password
diff --git a/.github/workflows/publish-hotfix.yml b/.github/workflows/publish-hotfix.yml
index 95b4abd..34a48b1 100644
--- a/.github/workflows/publish-hotfix.yml
+++ b/.github/workflows/publish-hotfix.yml
@@ -10,7 +10,7 @@ permissions:
 
 env:
   AWS_REGION: eu-west-2
-  AWS_ACCOUNT_ID: "094954420758"
+  AWS_ACCOUNT_ID: '094954420758'
 
 jobs:
   build:
@@ -38,7 +38,6 @@ jobs:
         uses: DEFRA/cdp-build-action/build-hotfix@main
         with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
-
 #      - name: SonarCloud Scan
 #        uses: SonarSource/sonarcloud-github-action@master
 #        env:
diff --git a/.github/workflows/publish.yml b/.github/workflows/publish.yml
index 35ad2a8..251bb46 100644
--- a/.github/workflows/publish.yml
+++ b/.github/workflows/publish.yml
@@ -12,7 +12,7 @@ permissions:
 
 env:
   AWS_REGION: eu-west-2
-  AWS_ACCOUNT_ID: "094954420758"
+  AWS_ACCOUNT_ID: '094954420758'
 
 jobs:
   build:
@@ -27,7 +27,6 @@ jobs:
         uses: DEFRA/cdp-build-action/build@main
         with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
-
 #      - name: Create Test Coverage Reports
 #        run: |
 #          npm ci
diff --git a/compose.yml b/compose.yml
index 521211c..f30a413 100644
--- a/compose.yml
+++ b/compose.yml
@@ -1,6 +1,5 @@
 version: '3.4'
 services:
-
   localstack:
     image: localstack/localstack:3.0.2
     ports:
@@ -42,7 +41,7 @@ services:
       - mongodb-data:/data
     restart: always
 
-################################################################################
+  ################################################################################
 
   your-frontend:
     build: ./
diff --git a/src/client/stylesheets/_govuk-frontend.scss b/src/client/stylesheets/_govuk-frontend.scss
index 0effa8e..85872fe 100644
--- a/src/client/stylesheets/_govuk-frontend.scss
+++ b/src/client/stylesheets/_govuk-frontend.scss
@@ -1,5 +1,5 @@
-@forward "pkg:govuk-frontend" with (
-  $govuk-assets-path: "/public/assets/",
+@forward 'pkg:govuk-frontend' with (
+  $govuk-assets-path: '/public/assets/',
   $govuk-new-organisation-colours: true,
   $govuk-global-styles: true
 );
diff --git a/src/client/stylesheets/application.scss b/src/client/stylesheets/application.scss
index 09046f8..4f4acd1 100644
--- a/src/client/stylesheets/application.scss
+++ b/src/client/stylesheets/application.scss
@@ -1,7 +1,7 @@
-@use "govuk-frontend";
+@use 'govuk-frontend';
 
-@use "variables";
-@use "helpers";
-@use "core";
-@use "components";
-@use "partials";
+@use 'variables';
+@use 'helpers';
+@use 'core';
+@use 'components';
+@use 'partials';
diff --git a/src/client/stylesheets/components/_index.scss b/src/client/stylesheets/components/_index.scss
index 7c14fa4..412a543 100644
--- a/src/client/stylesheets/components/_index.scss
+++ b/src/client/stylesheets/components/_index.scss
@@ -1,2 +1,2 @@
 // import custom component styles
-@use "heading/heading";
+@use 'heading/heading';
diff --git a/src/client/stylesheets/core/_header.scss b/src/client/stylesheets/core/_header.scss
index aa4b96e..c9d93c3 100644
--- a/src/client/stylesheets/core/_header.scss
+++ b/src/client/stylesheets/core/_header.scss
@@ -1,4 +1,4 @@
-@use "variables/colours" as *;
+@use 'variables/colours' as *;
 
 // Example namespaced custom element style CSS classes
 
diff --git a/src/client/stylesheets/core/_index.scss b/src/client/stylesheets/core/_index.scss
index c70137e..3596a22 100644
--- a/src/client/stylesheets/core/_index.scss
+++ b/src/client/stylesheets/core/_index.scss
@@ -1,2 +1,2 @@
-@use "header";
-@use "main";
+@use 'header';
+@use 'main';
diff --git a/src/client/stylesheets/core/_main.scss b/src/client/stylesheets/core/_main.scss
index 3deee98..ad91de7 100644
--- a/src/client/stylesheets/core/_main.scss
+++ b/src/client/stylesheets/core/_main.scss
@@ -1,4 +1,4 @@
-@use "govuk-frontend" as *;
+@use 'govuk-frontend' as *;
 
 // Example namespaced custom element style CSS classes
 
diff --git a/src/client/stylesheets/helpers/_index.scss b/src/client/stylesheets/helpers/_index.scss
index 2c36570..2daf891 100644
--- a/src/client/stylesheets/helpers/_index.scss
+++ b/src/client/stylesheets/helpers/_index.scss
@@ -1 +1 @@
-@forward "links";
+@forward 'links';
diff --git a/src/client/stylesheets/partials/_index.scss b/src/client/stylesheets/partials/_index.scss
index f15c269..78fe71f 100644
--- a/src/client/stylesheets/partials/_index.scss
+++ b/src/client/stylesheets/partials/_index.scss
@@ -1,2 +1,2 @@
 // import custom partial styles
-@use "navigation/navigation";
+@use 'navigation/navigation';
diff --git a/src/client/stylesheets/variables/_index.scss b/src/client/stylesheets/variables/_index.scss
index d91c7fd..729b580 100644
--- a/src/client/stylesheets/variables/_index.scss
+++ b/src/client/stylesheets/variables/_index.scss
@@ -1 +1 @@
-@forward "colours";
+@forward 'colours';
diff --git a/src/config/config.js b/src/config/config.js
index 26f86cf..4d86ba1 100644
--- a/src/config/config.js
+++ b/src/config/config.js
@@ -40,7 +40,7 @@ export const config = convict({
   serviceName: {
     doc: 'Applications Service Name',
     format: String,
-    default: 'cdp-node-frontend-template'
+    default: 'Technical Assurance'
   },
   root: {
     doc: 'Project root',
diff --git a/src/config/nunjucks/context/context.test.js b/src/config/nunjucks/context/context.test.js
index 04a1ea3..698d5fc 100644
--- a/src/config/nunjucks/context/context.test.js
+++ b/src/config/nunjucks/context/context.test.js
@@ -47,7 +47,7 @@ describe('#context', () => {
             url: '/about'
           }
         ],
-        serviceName: 'cdp-node-frontend-template',
+        serviceName: 'Technical Assurance',
         serviceUrl: '/'
       })
     })
@@ -136,7 +136,7 @@ describe('#context cache', () => {
             url: '/about'
           }
         ],
-        serviceName: 'cdp-node-frontend-template',
+        serviceName: 'Technical Assurance',
         serviceUrl: '/'
       })
     })
diff --git a/src/server/about/index.njk b/src/server/about/index.njk
index ced6957..cf9be72 100644
--- a/src/server/about/index.njk
+++ b/src/server/about/index.njk
@@ -3,19 +3,35 @@
 {% block content %}
   {{ appHeading({
     text: heading,
-    caption: "Core delivery platform Node.js Frontend Template."
+    caption: "About Technical Assurance"
   }) }}
 
   <div class="govuk-grid-row">
     <div class="govuk-grid-column-two-thirds">
       <div class="govuk-body" data-testid="app-page-body">
         <p>
-          Based on <a href="https://defra.github.io/software-development-standards">DEFRA</a> and <a
-            href="https://design-system.service.gov.uk/">GOV.UK</a> best practices this starter kit provides you with
-          a deployable, production ready template 🙌🏻 to start your new service with.
+          The Technical Assurance service helps ensure DEFRA's digital services meet the 
+          <a href="https://www.gov.uk/service-manual/service-standard" class="govuk-link">Government Service Standard</a> 
+          and <a href="https://www.gov.uk/service-manual/technology" class="govuk-link">Technology Code of Practice</a>.
+        </p>
+        
+        <p>
+          We work with delivery teams to:
+        </p>
+
+        <ul class="govuk-list govuk-list--bullet">
+          <li>Review technical approaches and architectures</li>
+          <li>Provide guidance on GDS best practices and standards</li>
+          <li>Help prepare for service assessments</li>
+          <li>Identify and mitigate technical risks</li>
+          <li>Share knowledge and promote consistency across services</li>
+        </ul>
+
+        <p>
+          Our goal is to support teams in building high-quality, user-centered digital services
+          that meet government standards and deliver value for citizens.
         </p>
       </div>
     </div>
   </div>
-
 {% endblock %}
diff --git a/src/server/common/components/heading/_heading.scss b/src/server/common/components/heading/_heading.scss
index b80c267..eb1d7df 100644
--- a/src/server/common/components/heading/_heading.scss
+++ b/src/server/common/components/heading/_heading.scss
@@ -1,4 +1,4 @@
-@use "govuk-frontend" as *;
+@use 'govuk-frontend' as *;
 
 .app-heading {
   display: flex;
diff --git a/src/server/common/helpers/errors.test.js b/src/server/common/helpers/errors.test.js
index 719d037..451c51c 100644
--- a/src/server/common/helpers/errors.test.js
+++ b/src/server/common/helpers/errors.test.js
@@ -22,7 +22,7 @@ describe('#errors', () => {
     })
 
     expect(result).toEqual(
-      expect.stringContaining('Page not found | cdp-node-frontend-template')
+      expect.stringContaining('Page not found | Technical Assurance')
     )
     expect(statusCode).toBe(statusCodes.notFound)
   })
diff --git a/src/server/common/templates/partials/navigation/_navigation.scss b/src/server/common/templates/partials/navigation/_navigation.scss
index 284f0fa..8356dda 100644
--- a/src/server/common/templates/partials/navigation/_navigation.scss
+++ b/src/server/common/templates/partials/navigation/_navigation.scss
@@ -1,11 +1,11 @@
-@use "govuk-frontend" as *;
-@use "variables/colours" as *;
+@use 'govuk-frontend' as *;
+@use 'variables/colours' as *;
 
 $navigation-height: 60px;
 $border-bottom-width: 4px;
 
 .app-navigation {
-  border-bottom: 1px solid govuk-colour("mid-grey");
+  border-bottom: 1px solid govuk-colour('mid-grey');
   background-color: $app-light-grey;
 }
 
@@ -26,7 +26,7 @@ $border-bottom-width: 4px;
 
   > a:focus {
     box-shadow: none;
-    border-bottom: $border-bottom-width solid govuk-colour("black");
+    border-bottom: $border-bottom-width solid govuk-colour('black');
   }
 }
 
@@ -39,7 +39,7 @@ $border-bottom-width: 4px;
   border-bottom: 4px solid transparent;
 
   @include govuk-link-style-no-visited-state;
-  @include govuk-font(24, "bold");
+  @include govuk-font(24, 'bold');
 
   @include govuk-media-query($from: tablet) {
     padding-bottom: 0;
@@ -51,16 +51,16 @@ $border-bottom-width: 4px;
   }
 
   &:hover {
-    color: govuk-colour("black");
-    border-bottom: $border-bottom-width solid govuk-colour("black");
+    color: govuk-colour('black');
+    border-bottom: $border-bottom-width solid govuk-colour('black');
   }
 }
 
 .app-navigation__link--active {
-  border-bottom: $border-bottom-width solid govuk-colour("blue");
+  border-bottom: $border-bottom-width solid govuk-colour('blue');
 
   &:hover {
-    color: govuk-colour("dark-blue");
-    border-bottom: $border-bottom-width solid govuk-colour("dark-blue");
+    color: govuk-colour('dark-blue');
+    border-bottom: $border-bottom-width solid govuk-colour('dark-blue');
   }
 }
diff --git a/src/server/home/controller.js b/src/server/home/controller.js
index 37059ef..e9d612b 100644
--- a/src/server/home/controller.js
+++ b/src/server/home/controller.js
@@ -4,10 +4,24 @@
  * @satisfies {Partial<ServerRoute>}
  */
 export const homeController = {
-  handler(_request, h) {
+  handler: (request, h) => {
     return h.view('home/index', {
-      pageTitle: 'Home',
-      heading: 'Home'
+      pageTitle: 'DDTS Technical Assurance Dashboard',
+      heading: 'DDTS Technical Assurance Dashboard',
+      projects: [
+        {
+          name: 'CDP Platform',
+          status: 'AMBER',
+          lastUpdated: '15 March 2024',
+          actions: 'View details'
+        },
+        {
+          name: 'ELM Payment Services',
+          status: 'GREEN',
+          lastUpdated: '10 March 2024',
+          actions: 'View details'
+        }
+      ]
     })
   }
 }
diff --git a/src/server/home/controller.test.js b/src/server/home/controller.test.js
index 6661cf4..7bc3ed6 100644
--- a/src/server/home/controller.test.js
+++ b/src/server/home/controller.test.js
@@ -20,7 +20,9 @@ describe('#homeController', () => {
       url: '/'
     })
 
-    expect(result).toEqual(expect.stringContaining('Home |'))
+    expect(result).toEqual(
+      expect.stringContaining('DDTS Technical Assurance Dashboard |')
+    )
     expect(statusCode).toBe(statusCodes.ok)
   })
 })
diff --git a/src/server/home/index.njk b/src/server/home/index.njk
index e4d8a0e..40621bc 100644
--- a/src/server/home/index.njk
+++ b/src/server/home/index.njk
@@ -3,56 +3,43 @@
 {% block content %}
   {{ appHeading({
     text: heading,
-    caption: "Core delivery platform Node.js Frontend Template."
+    caption: "View and manage technical assurance reviews for DDTS projects."
   }) }}
 
   <div class="govuk-grid-row">
-    <div class="govuk-grid-column-two-thirds">
-      <div class="govuk-body" data-testid="app-page-body">
-        <p>
-          Welcome to the Frontend Template, a starter kit for Core Delivery Platform Node.js Frontends 🚀
-        </p>
-        <p>
-          Based on <a href="https://defra.github.io/software-development-standards">DEFRA</a> and <a
-            href="https://design-system.service.gov.uk/">GOV.UK</a> best practices this starter kit provides you with
-          a deployable, production ready template 🙌🏻 to start your new service with.
-        </p>
-        <p>This template comes with:</p>
-        <ul>
-          <li>
-            <a href="https://frontend.design-system.service.gov.uk/">GOV.UK Frontend</a>
-          </li>
-          <li>
-            <a href="https://hapi.dev">Hapi.js</a>
-          </li>
-          <li>
-            <a href="https://mozilla.github.io/nunjucks/">Nunjucks</a>
-          </li>
-          <li>
-            <a href="https://github.com/mozilla/node-convict">Node Convict</a>
-          </li>
-          <li>
-            <a href="https://jestjs.io/">Jest testing</a>
-          </li>
-          <li>GitHub Actions Pull Request and Publish jobs</li>
-          <li>
-            <a href="https://github.com/pinojs/pino">PinoJs logging</a>
-          </li>
-          <li>
-            <a href="https://standardjs.com">Standard JS</a>
-          </li>
-          <li>
-            <a href="https://eslint.org">ESLint</a>
-          </li>
-          <li>
-            <a href="https://stylelint.io">StyleLint</a>
-          </li>
-          <li>
-            <a href="https://prettier.io">Prettier</a>
-          </li>
-          <li>and lots more... 😎</li>
-        </ul>
-      </div>
+    <div class="govuk-grid-column-full">
+      <p class="govuk-body">{{ description }}</p>
+
+      <table class="govuk-table">
+        <thead class="govuk-table__head">
+          <tr class="govuk-table__row">
+            <th scope="col" class="govuk-table__header">Project name</th>
+            <th scope="col" class="govuk-table__header">RAG status</th>
+            <th scope="col" class="govuk-table__header">Last updated</th>
+            <th scope="col" class="govuk-table__header">Actions</th>
+          </tr>
+        </thead>
+        <tbody class="govuk-table__body">
+          {% for project in projects %}
+            <tr class="govuk-table__row">
+              <td class="govuk-table__cell">{{ project.name }}</td>
+              <td class="govuk-table__cell">
+                <strong class="govuk-tag 
+                  {% if project.status === 'RED' %}govuk-tag--red
+                  {% elif project.status === 'AMBER' %}govuk-tag--yellow
+                  {% elif project.status === 'GREEN' %}govuk-tag--green
+                  {% endif %}">
+                  {{ project.status }}
+                </strong>
+              </td>
+              <td class="govuk-table__cell">{{ project.lastUpdated }}</td>
+              <td class="govuk-table__cell">
+                <a href="#" class="govuk-link">{{ project.actions }}</a>
+              </td>
+            </tr>
+          {% endfor %}
+        </tbody>
+      </table>
     </div>
   </div>
 
-- 
2.39.3 (Apple Git-146)

